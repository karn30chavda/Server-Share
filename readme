# 🎥 Server Share - Video Streaming Web App

A local video streaming server with React frontend and Express backend.
Browse, search, sort, and play videos stored on your machine from a sleek web interface.

---

## 🚀 Features

- List all video files from a local directory (supports `.mp4`, `.webm`, `.ogg`, `.mkv`)
- Video streaming with range requests for smooth playback (supports pause/resume)
- Search videos by name with instant filtering
- Sort videos alphabetically (asc/desc toggle)
- Two viewing modes: List (table) and Detail (grid cards)
- Play videos directly in browser or open in new tab
- Responsive UI with modern design and Lucide icons

---

## 🛠 Tech Stack

| Layer    | Technologies                          |
| -------- | ------------------------------------- |
| Backend  | Node.js, Express, CORS, fs, mime      |
| Frontend | React, Axios, Lucide React Icons, CSS |

---

## 🗂 Project Structure

```
server-share/
├── backend/
│   ├── server.js        # Express backend API and video streaming
├── frontend/
│   ├── src/
│   │   ├── App.jsx      # Main React app component
│   │   ├── index.css    # Styling for app
│   ├── package.json     # Frontend dependencies & scripts
├── README.md
```

---

## 📋 Backend Setup

1. Make sure you have Node.js installed (v14+ recommended)

2. Change the `baseDir` variable in `server.js` to your video folder path:

   ```js
   const baseDir = "C:\\Users\\Acer\\Desktop\\TELECAST";
   ```

3. Install dependencies for backend:

   ```sh
   npm install express cors mime
   ```

4. Run backend server:
   ```sh
   node server.js
   ```

**Backend API endpoints:**

- `GET /videos` — Returns list of videos in the directory
- `GET /video/:filename` — Streams the requested video with range support

---

## ⚛️ Frontend Setup

1. Navigate to frontend folder:

   ```sh
   cd frontend
   ```

2. Install frontend dependencies:

   ```sh
   npm install
   ```

3. Run the React app (using Vite or CRA):
   ```sh
   npm run dev
   ```

Frontend fetches videos from `http://192.168.0.105:5000/videos`.
Update this IP in `App.jsx` if your backend runs elsewhere.

---

## 🔧 How It Works

- Backend scans your specified folder and returns all video files.
- Frontend fetches this list, lets you search and sort.
- Video URLs are proxied via backend `/video/:filename` route, streaming with range support.
- You can switch between list and detail views for better browsing experience.

---

## 🎨 UI Preview

**List View**

| #   | Name        | Play   |
| --- | ----------- | ------ |
| 1   | Sample1.mp4 | [Play] |
| 2   | Sample2.mkv | [Play] |

**Detail View**
Grid cards with video thumbnails and play buttons.

---

## 💡 Tips

- Ensure your `baseDir` folder has read
